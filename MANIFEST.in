# Easy Installation and Usage Guide

## **Quick Installation from GitHub**

### **Option 1: Direct pip install (Recommended)**
```bash
# Install directly from GitHub (installs to your Python environment)
pip install git+https://github.com/kwein123/web_scraper_project.git

# Or install in "editable" mode for development
pip install -e git+https://github.com/kwein123/web_scraper_project.git#egg=web_scraper_project
```

### **Option 2: Clone and install**
```bash
# Clone to specific directory
git clone https://github.com/kwein123/web_scraper_project.git
cd web_scraper_project

# Install in development mode (changes to code are immediately available)
pip install -e .

# Or regular installation
pip install .
```

### **Option 3: Install to specific location**
```bash
# Install to a specific directory (not recommended for most users)
pip install --target /path/to/your/directory git+https://github.com/kwein123/web_scraper_project.git

# Add to Python path (add to your ~/.bashrc or ~/.zshrc)
export PYTHONPATH="/path/to/your/directory:$PYTHONPATH"
```

## **After Installation - How to Run**

### **Method 1: Command Line (Easiest)**
After installation, you can run from anywhere:

```bash
# Multiple command options (all do the same thing)
web-scraper-project
webscraper
web-scraper

# With custom arguments
web-scraper-project --urls https://example.com --terms python web
web-scraper-project --examples  # Run built-in examples
web-scraper-project --config-only  # Show current settings
```

### **Method 2: Python Import**
```python
# Import and use in your own Python scripts
from web_scraper_project import WebScraper, config

# Create scraper
scraper = WebScraper(delay=1.0)

# Use with config.py settings
results = scraper.scrape_urls(
    urls=config.URLS,
    search_terms=config.SEARCH_TERMS
)

# Or with custom settings
results = scraper.scrape_urls(
    urls=["https://example.com"],
    search_terms=["python", "web"]
)

scraper.print_results(results)
```

### **Method 3: Direct Package Execution**
```bash
# Run as a module
python -m web_scraper_project

# Run specific functions
python -c "from web_scraper_project import main; main()"
```

## **Configuration**

### **Edit Configuration File**
After installation, you can find and edit the config.py:

```bash
# Find where it's installed
python -c "import web_scraper_project; print(web_scraper_project.__file__)"

# Edit the config.py in that directory
# Or better: create your own config and import the package in your script
```

### **Use Command Line Arguments** (Recommended)
```bash
# Override any config.py settings
web-scraper-project \
  --urls https://example.com https://python.org \
  --terms python programming \
  --delay 2.0 \
  --case-sensitive \
  --search-in body \
  --output my_results.json
```

## **For Different Installation Preferences**

### **Virtual Environment (Recommended)**
```bash
# Create isolated environment
python -m venv web_scraper_env
source web_scraper_env/bin/activate  # Linux/Mac
# web_scraper_env\Scripts\activate    # Windows

# Install in the virtual environment
pip install git+https://github.com/kwein123/web_scraper_project.git

# Run
webscraper

# Deactivate when done
deactivate
```

### **User Installation (No admin rights needed)**
```bash
# Install for current user only
pip install --user git+https://github.com/kwein123/web_scraper_project.git

# Make sure ~/.local/bin is in your PATH
export PATH="$HOME/.local/bin:$PATH"

# Run
webscraper
```

### **Docker (Completely isolated)**
Create a `Dockerfile`:
```dockerfile
FROM python:3.9-slim

WORKDIR /app
RUN pip install git+https://github.com/kwein123/web_scraper_project.git

ENTRYPOINT ["webscraper"]
```

```bash
# Build and run
docker build -t webscraper .
docker run webscraper --urls https://example.com --terms test
```

## **Troubleshooting**

### **Command not found**
```bash
# Check if installed
pip list | grep web-scraper

# Find entry points
python -c "import pkg_resources; print([ep.name for ep in pkg_resources.iter_entry_points('console_scripts') if 'web' in ep.name])"

# Manual execution
python -c "from web_scraper_project.cli import main; main()"
```

### **Import errors**
```bash
# Check installation
python -c "import web_scraper_project; print('OK')"

# Reinstall if needed
pip uninstall web_scraper_project -y
pip install git+https://github.com/kwein123/web_scraper_project.git
```

## **Development Setup**
```bash
# For contributing to the project
git clone https://github.com/kwein123/web_scraper_project.git
cd web_scraper_project

# Install development dependencies
pip install -e ".[dev]"

# Run tests
python -m pytest

# Format code
black .

# Type checking
mypy web_scraper_project/
```